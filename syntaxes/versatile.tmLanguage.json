{
    "repository": {
        "comments": {
            "name": "comment.line.number-sign.versatile", 
            "begin": "\\#", 
            "end": "\\#"
        }, 
        "object": {
            "name": "meta.object.versatile", 
            "begin": "\\{", 
            "comment": "object scope", 
            "patterns": [
                {
                    "include": "#core-patterns"
                }
            ], 
            "end": "\\}"
        }, 
        "headers": {
            "name": "meta.headerContent.versatile", 
            "match": "([^\\.]*)(\\.[^:]*)?[[:alnum:]]*\\s*\\:\\s*(.*)", 
            "comment": "all lines but the dialect lines", 
            "captures": {
                "2": {
                    "name": "entity.other.attribute-name.versatile"
                }, 
                "3": {
                    "name": "meta.headerContent.value.versatile", 
                    "patterns": [
                        {
                            "include": "#header-string"
                        }, 
                        {
                            "include": "#numbers"
                        }, 
                        {
                            "include": "#booleans"
                        }, 
                        {
                            "include": "#comments"
                        }
                    ]
                }, 
                "1": {
                    "name": "entity.name.type.versatile"
                }
            }
        }, 
        "dialect-string": {
            "name": "string.interpolated.versatile", 
            "begin": "\\\\\\\"", 
            "comment": "\\\"Comments inside dialect\\\"", 
            "end": "\\\\\\\""
        }, 
        "attribute": {
            "match": "([_$[:alpha:]][_$[:alnum:]]*)", 
            "captures": {
                "1": {
                    "name": "variable.other.versatile"
                }
            }, 
            "comment": "base scope, attribute of an object", 
            "patterns": [
                {
                    "include": "#index-var"
                }, 
                {
                    "include": "#comments"
                }
            ]
        }, 
        "property": {
            "name": "meta.property.versatile", 
            "match": "\\.([_$[:alnum:]]*)", 
            "comment": ".someProperty", 
            "captures": {
                "1": {
                    "name": "entity.other.attribute-name.versatile"
                }
            }
        }, 
        "dialects": {
            "begin": "(Decoder|Encoder)\\.(Versatile|VersatileReport)(\\.Dialect).*\\s*:(\\s*\\\")", 
            "comment": "scope related to dialects (decoder, encoder, ...)", 
            "name": "meta.dialect.versatile", 
            "beginCaptures": {
                "2": {
                    "name": "entity.other.attribute-name.versatile"
                }, 
                "3": {
                    "name": "entity.name.function.versatile"
                }, 
                "1": {
                    "name": "entity.name.type.versatile"
                }, 
                "4": {
                    "name": "entity.other.inherited-class.versatile"
                }
            }, 
            "patterns": [
                {
                    "include": "#core-patterns"
                }, 
                {
                    "include": "#comments"
                }
            ], 
            "endCaptures": {
                "0": {
                    "name": "entity.other.inherited-class.versatile"
                }
            }, 
            "end": "\\\""
        }, 
        "function": {
            "begin": "(\\??[_$[:alpha:]][_$[:alnum:]]*)\\s?\\(", 
            "comment": "functions scope, functionName(.*)", 
            "contentName": "meta.function.parameters", 
            "beginCaptures": {
                "1": {
                    "name": "entity.function.name.versatile"
                }
            }, 
            "patterns": [
                {
                    "include": "#core-patterns"
                }
            ], 
            "end": "\\)"
        }, 
        "index-var": {
            "name": "meta.array.index.versatile", 
            "match": "(\\$[_$[:alnum:]]*)", 
            "comment": "index $i to iterate through an array", 
            "captures": {
                "1": {
                    "name": "keyword.control.versatile"
                }
            }
        }, 
        "core-patterns": {
            "patterns": [
                {
                    "include": "#function"
                }, 
                {
                    "include": "#array"
                }, 
                {
                    "include": "#object"
                }, 
                {
                    "include": "#property"
                }, 
                {
                    "include": "#numbers"
                }, 
                {
                    "include": "#index-var"
                }, 
                {
                    "include": "#one-line-attribute"
                }, 
                {
                    "include": "#attribute"
                }, 
                {
                    "include": "#booleans"
                }, 
                {
                    "include": "#dialect-string"
                }, 
                {
                    "include": "#comments"
                }
            ]
        }, 
        "array": {
            "begin": "\\.?([_$[:alnum:]]*)?\\[", 
            "comment": "array scope, arrayName[.*]", 
            "name": "meta.array.versatile", 
            "beginCaptures": {
                "1": {
                    "name": "meta.array.name.versatile"
                }
            }, 
            "patterns": [
                {
                    "include": "#core-patterns"
                }
            ], 
            "end": "\\]"
        }, 
        "booleans": {
            "name": "constant.language.versatile", 
            "match": "true|false", 
            "comment": "true or false"
        }, 
        "one-line-attribute": {
            "match": "^\\s*(\\w*)\\s*\\=\\s*(\\w*)\\s*$", 
            "comment": "hack to color lines of type, attribute = property", 
            "captures": {
                "2": {
                    "name": "entity.other.attribute-name.versatile"
                }, 
                "1": {
                    "name": "variable.other.versatile"
                }
            }
        }, 
        "numbers": {
            "name": "constant.numeric.versatile", 
            "match": "\\d"
        }, 
        "header-string": {
            "name": "string.quoted.double.versatile", 
            "begin": "\\\"", 
            "end": "\\\"", 
            "patterns": [
                {
                    "match": "(\\$\\{[^\\}]*\\})|(\\%\\%[^\\%]*\\%\\%)", 
                    "comment": "macros inside a header string", 
                    "captures": {
                        "2": {
                            "name": "entity.other.attribute-name.versatile"
                        }, 
                        "1": {
                            "name": "entity.other.attribute-name.versatile"
                        }
                    }
                }
            ]
        }
    }, 
    "scopeName": "source.versatile", 
    "name": "Versatile", 
    "uuid": "5f4ef975-8f06-40c7-a78c-a6e7820644a3", 
    "patterns": [
        {
            "include": "#dialects"
        }, 
        {
            "include": "#headers"
        }, 
        {
            "include": "#comments"
        }
    ], 
    "fileTypes": [
        ".config"
    ]
}